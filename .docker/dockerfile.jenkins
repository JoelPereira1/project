FROM jenkins/jenkins:lts-alpine
USER root
RUN apk add --no-cache docker docker-cli docker-cli-compose python3
  # python3 -m ensurepip --break-system-packages && \
  # pip3 install --break-system-packages â€”-upgrade pip setuptools && \
  # if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
  # if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
  # rm -r /root/.cache
# RUN apk add pkgconf
# RUN apk add build-base
# RUN apk add python3-dev


# FROM jenkins/jenkins:lts-alpine
# #You need jenkins:lts-alpine instead of jenkins for apk among others
# USER root

# #Use apk to add python3 and then start bootstrapping pip
# RUN apk add python3 \
#   && curl -O https://bootstrap.pypa.io/get-pip.py \
#   && python3 get-pip.py
# #I needed python&pip for ansible, which itself needs some more stuff.

# #To have a clean environment with the typical aliases
# RUN if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
#   if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
#   rm -r /root/.cache \

#   RUN pip install alpine==0.0.2
# RUN apk add pkgconf #gives: /usr/glibc-compat/sbin/ldconfig: /usr/glibc-compat/lib/ld-linux-x86-64.so.2 is not a symbolic link
# RUN apk add build-base #gives: /usr/glibc-compat/sbin/ldconfig: /usr/glibc-compat/lib/ld-linux-x86-64.so.2 is not a symbolic link
# RUN apk add python3-dev #gives: /usr/glibc-compat/sbin/ldconfig: /usr/glibc-compat/lib/ld-linux-x86-64.so.2 is not a symbolic link

# #change back to user jenkins
# # USER  jenkins